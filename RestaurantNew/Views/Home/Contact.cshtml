@{
    ViewBag.Title = "Contact";
}
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, width=device-width" />
    <link rel="stylesheet" type="text/css" href="https://js.api.here.com/v3/3.0/mapsjs-ui.css?dp-version=1549984893" />
    <script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-core.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-service.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-ui.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-mapevents.js"></script>

</head>
<body style="background-color: darkgray;">
    <div class="container ">
        <div class="row">
            <div class="col-md-6 ">
                <div id="map" style="width: 100%; height: 400px;" />
            </div>
            <div class="col-md-6 ">
                <h3> Our Branches</h3>
                <ul style="list-style-type: disc">
                    <li>
                        <h4>Jerusalem</h4>
                        <h5>King Gorg St.</h5>
                    </li>
                    <br />
                    <li>
                        <h4>Tel-Aviv</h4>
                        <h5>Dizingoph St.</h5>
                    </li>
                    <br />
                    <li>
                        <h4>Herzelya</h4>
                        <h5>Shenkar St.</h5>
                    </li>
                    <br />
                    <li>
                        <h4>Karmiel</h4>
                        <h5>Yossef St.</h5>
                    </li>
                    <br />
                    <li>
                        <h4>Haifa</h4>
                        <h5>Hrzel St.</h5>
                    </li>

                </ul>
            </div>
        </div>
    </div>


    <script type="text/javascript" charset="UTF-8">
        function myMap() {
            var mapCanvas = document.getElementById("map");
            var myCenter = new google.maps.LatLng(31.771959, 35.217018);
            var TelAviv = new google.maps.LatLng(32.109333, 34.855499);
            var Haifa = new google.maps.LatLng(32.794044, 34.989571);
            var Herzelya = new google.maps.LatLng(32.166313, 34.843311);
            var Karmiel = new google.maps.LatLng(32.919945, 35.290146);
            var mapOptions = { center: myCenter, zoom: 5 };
            var map = new google.maps.Map(mapCanvas, mapOptions);
            var marker = new google.maps.Marker({
                position: myCenter,
                animation: google.maps.Animation.BOUNCE
            });
            var marker2 = new google.maps.Marker({
                position: TelAviv,
                animation: google.maps.Animation.BOUNCE
            });
            var marker3 = new google.maps.Marker({
                position: Haifa,
                animation: google.maps.Animation.BOUNCE
            });
            var marker4 = new google.maps.Marker({
                position: Herzelya,
                animation: google.maps.Animation.BOUNCE
            });
            var marker5 = new google.maps.Marker({
                position: Karmiel,
                animation: google.maps.Animation.BOUNCE
            });
            marker.setMap(map);
            marker2.setMap(map);
            marker3.setMap(map);
            marker4.setMap(map);
            marker5.setMap(map);
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCOQecjiq8CEP664cBNSyqq3d8wM-F5Dbc&callback=myMap">
    </script>


</body>
</html>



@**/
        function setUpCustomZooming(map) {
            // create several circles to denote cities' population
            var clevelandCircle = new H.map.Circle(
                new H.geo.Point(31.7910986, 34.6394934), //center
                11703, // Radius proportional to 390,113 population
                { style: { fillColor: 'rgba(0, 255, 221, 0.66)' } }
            );
            var torontoCircle = new H.map.Circle(
                new H.geo.Point(31.7910986, 34.6394934), //center
                75090, // Radius proportional to 2.503 million population
                { style: { fillColor: 'rgba(0, 255, 221, 0.66)' } }
            );
            var chicagoCircle = new H.map.Circle(
                new H.geo.Point(31.7910986, 34.6394934), //center
                81570, // Radius proportional to 2.719 million population
                { style: { fillColor: 'rgba(0, 221, 255, 0.66)' } }
            );
            var newYorkCircle = new H.map.Circle(
                new H.geo.Point(31.7910986, 34.6394934), //center
                252180, // Radius proportional to 8.406 million population
                { style: { fillColor: 'rgba(221, 0, 255, 0.66)' } }
            );
            // define maximum zoom level for each circle
            clevelandCircle.setData({ maxZoom: 7 });
            torontoCircle.setData({ maxZoom: 5 });
            chicagoCircle.setData({ maxZoom: 5 });
            newYorkCircle.setData({ maxZoom: 4 });

            // create container for objects
            var container = new H.map.Group({
                objects: [clevelandCircle, torontoCircle, chicagoCircle, newYorkCircle]
            });

            // use the event delegation to handle 'tap' events on objects
            container.addEventListener('tap',
                function (evt) {
                    var target = evt.target;
                    // retrieve maximum zoom level
                    var maxZoom = target.getData().maxZoom;
                    // calculate best camera data to fit object's bounds
                    var cameraData = map.getCameraDataForBounds(target.getBounds());

                    // we set new zoom level taking into acount 'maxZoom' value
                    map.setZoom(Math.min(cameraData.zoom, maxZoom), true);
                    map.setCenter(cameraData.position, true);
                });

            // add objects to the map
            map.addObject(container);
        }


        /**
         * Boilerplate map initialization code starts below:
         */

        // Step 1: initialize communication with the platform
        var platform = new H.service.Platform({
            app_id: 'devportal-demo-20180625',
            app_code: '9v2BkviRwi9Ot26kp2IysQ',
            useHTTPS: true
        });
        var pixelRatio = window.devicePixelRatio || 1;
        var defaultLayers = platform.createDefaultLayers({
            tileSize: pixelRatio === 1 ? 256 : 512,
            ppi: pixelRatio === 1 ? undefined : 320
        });

        // Step 2: initialize a map
        var map = new H.Map(document.getElementById('map'),
            defaultLayers.normal.map,
            {
                // initial center and zoom level of the map
                center: new H.geo.Point(41.4822, -81.6697),
                zoom: 6,
                pixelRatio: pixelRatio
            });

        // Step 3: make the map interactive
        // MapEvents enables the event system
        // Behavior implements default interactions for pan/zoom (also on mobile touch environments)
        var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

        // Step 4: main logic goes here
        setUpCustomZooming(map);
    </script>*@
<!--
    To use this code on your website, get a free API key from Google.
    Read more at: https://www.w3schools.com/graphics/google_maps_basic.asp

AIzaSyCOQecjiq8CEP664cBNSyqq3d8wM-F5Dbc
    -->
